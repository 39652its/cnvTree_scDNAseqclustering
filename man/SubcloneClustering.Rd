% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scDNAclustering_07_TotalSteps.R
\name{SubcloneClustering}
\alias{SubcloneClustering}
\title{Perform subclone clustering in scDNA-seq data clustering workflow}
\usage{
SubcloneClustering(
  input,
  Reclustering_output,
  min_cell = 5,
  overlap_region = 10^7,
  dif_ratio = 0.2
)
}
\arguments{
\item{input}{A named list where each element is a \code{GRanges} object representing a single cell.}

\item{Reclustering_output}{A data frame recording pqArm clustering and re-clustering results for each cell.
This table tracks the clustering history up to this stage.}

\item{min_cell}{An integer specifying the minimum number of cells required for a cluster to be retained.}

\item{overlap_region}{An integer representing the genomic region where copy number frequently changes.}

\item{dif_ratio}{A numeric value defining the tolerance threshold for copy number differences
between cells within a cluster.}
}
\value{
A list containing two data frames:
\itemize{
\item \code{final_cluster_output}: Records the clustering history from the pqArm, re-clustering, and subclone clustering steps.
\item \code{Subclone_CN}: Records each subclone's unique chromosome segment template and its copy number.
It includes the following columns:
\itemize{
\item \code{chr}: Chromosome name (chr1, chr2, ...).
\item \code{start}: Start position of the segment.
\item \code{end}: End position of the segment.
\item \code{region}: The defined region index
\item \code{Subclone}: Subclone identifier.
\item \code{CN}: Copy number value of the segment.
}
}
}
\description{
This function executes the subclone clustering step in the single-cell DNA sequencing (scDNA-seq) data clustering workflow,
refining clusters based on copy number variations (CNVs) within subpopulations of cells.
}
\examples{
\dontrun{
file_path <- system.file("extdata", "example_data.rds", package = "cnvTree")
Example_data <- changeFormat(file = file_path, core = 4)

pqArm_result <- pqArmClustering(input = Example_data, pqArm_file = UCSC_cytoband_file_path)
Reclustering_output <- Reclustering(input = Example_data,
                                    pqArm_output = pqArm_result,
                                    pqArm_file = UCSC_cytoband_file_path)
Final_output <- SubcloneClustering(input = Example_data,
                                   Reclustering_output = Reclustering_output)
}

}
